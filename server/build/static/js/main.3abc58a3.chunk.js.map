{"version":3,"sources":["component/HomePage/index.js","Socket.js","component/MainPage/index.js","redux/app/appActions.js","component/RoomPage/index.js","component/FindRoom/index.js","redux/user/userActions.js","component/Layout/index.js","App.js","serviceWorker.js","redux/blockchain/blockchainActions.js","redux/blockchain/blockchainReducer.js","redux/data/dataActions.js","redux/data/dataReducer.js","redux/user/userReducer.js","redux/app/appReducer.js","redux/store.js","index.js"],"names":["HomePage","react_default","a","createElement","Fragment","className","src","window","origin","alt","style","marginBottom","cursor","onClick","open","process","navigator","clipboard","writeText","socket","io","player","enemy","shop","background","isDone","requestAnimationFrameId","gravity","MainPage","canvasRef","useRef","timerRef","countDownRef","_useState","useState","_useState2","Object","slicedToArray","ctx","setCtx","app","useSelector","state","currentRoom","playerDetail","history","useHistory","useEffect","current","currentCtx","getContext","handleEmitAction","payload","emit","objectSpread","roomId","who","isHost","checkOnKeyUp","key","keys","ArrowRight","pressed","ArrowLeft","onKeyUp","event","type","handleCheckOnkeyDown","isEmit","lastKey","attack","isJumping","setTimeout","velocity","y","checkOnKeyDown","onKeyDown","handleStartGame","_ref3","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","innerHTML","addEventListener","stop","apply","this","arguments","setStateFighter","_ref5","_callee2","_ref4","_context2","_x","checkMovement","position","x","minX","switchSprite","maxX","checkCollisionAndGetsHit","id","_ref6","rectangle1","rectangle2","attackBox","width","height","rectangularCollision","isAttacking","framesCurrent","takeHit","damage","gsap","to","health","hp","checkPlayerAction","_ref7","_callee3","_context3","abrupt","determineWinner","handleGameOver","displayTextEl","document","getElementById","players","playerName","animate","_ref8","_callee4","_context4","requestAnimationFrame","fillRect","fillStyle","update","console","log","removeEventListener","push","Sprite","_ref","imageSrc","_ref$scale","scale","_ref$framesMax","framesMax","_ref$offset","offset","classCallCheck","image","Image","framesElapsed","framesHold","createClass","value","c","drawImage","draw","animateFrames","Fighter","_Sprite","inherits","_super","_createSuper","_ref2","_this","_ref2$color","color","_ref2$scale","_ref2$framesMax","_ref2$offset","sprites","_ref2$attackBox","undefined","attackSpeed","defense","sprite","call","dead","lastTimeAttack","Date","getTime","canvasHeight","receiveAtk","Math","abs","death","attack1","idle","run","jump","fall","newData","clearRect","DEFAULT_DATA","hero","heroEnemy","samuraiMack","samuraiMackEnemy","warrior","warriorEnemy","wizard","wizardEnemy","champion","playerIndex","on","res","cancelAnimationFrame","off","backgroundImage","concat","ref","e","preventDefault","replace","display","marginTop","actionTypes","freeze","SET_DATA","CLEAR_DATA","setData","data","clearDataAction","RoomPage","dispatch","useDispatch","isFirstTime","setIsFirstTime","handleRoomStart","newRoomData","status","clearData","handleChangeStatus","newStatus","currentPlayerIndex","roomData","length","alert","roomName","deposit","border","onChange","target","Button","variant","FindRoom","props","show","setShow","_useState3","_useState4","_useState5","_useState6","roomList","setRoomList","getListRoom","values","isMounted","err","error","reason","connect","newRoom","toConsumableArray","pop","index","findIndex","item","splice","map","detail","errCode","errMessage","slice","renderRoomId","isStart","Modal","onHide","Dialog","Header","Title","Body","Form","onSubmit","parseInt","Group","controlId","Label","Control","required","placeholder","autoFocus","min","Footer","LOGIN_USER","LOGOUT_USER","login","Layout","isLoggedIn","href","rel","balance","userId","username","address","Component","routes","Home","component","path","isAuth","WaittingRoom","Fight","App","user","react_router_dom","react_router","exact","component_Layout","assign","extract","Boolean","location","hostname","match","CONNECTION_REQUEST","CONNECTION_SUCCESS","CONNECTION_FAILED","UPDATE_ACCOUNT","initialState","loading","account","lipToken","web3","errMesg","blockchainReducer","action","CHECK_DATA_REQUEST","CHECK_DATA_SUCCESS","CHECK_DATA_FAILED","allLips","allOwnerLips","errorMsg","dataReducer","userReducer","reload","appReducer","rootReducer","combineReducers","blockchain","middlewares","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","ReactDOM","render","es","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3abc58a3.chunk.js","sourcesContent":["import React from 'react'\r\nimport './home.scss'\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <>\r\n     <div className='container'>\r\n      <div className=\"row justify-content-center justify-content-lg-around align-items-center mb-5 w-100\">\r\n        <div className=\"col-md-12 col-lg-1 text-center text-md-center\">\r\n          <img\r\n            src={window.origin + '/img/hero.png'} alt=\"layer\"\r\n            className=\"layer h-auto\"\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-12 position-relative py-2 py-lg-0\">\r\n          <h4 className=\"text-white fw-bolder text-center text-uppercase mt-lg-0 mt-md-1 hero_sold\">HERO SOLD</h4>\r\n          <div className=\"text-center\">\r\n            <img\r\n              src={window.origin + '/img/short_bar.png'} alt=\"layer\"\r\n              className=\"w-100 bar img-short\"\r\n            />\r\n            <div className=\"position-absolute text-center quantity\">47945000</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 col-lg-6 col-md-10 textInput position-relative\" style={{ marginBottom: 10, cursor: 'pointer' }}>\r\n          <div className=\"position-relative\">\r\n            <img src={window.origin + '/img/bar.png'} alt=\"input\" className=\"input_long w-100 h-auto position-absolute\" />\r\n          </div>\r\n          <div className=\"position-absolute text-center hero_address w-100\" onClick={() => window.open('https://testnet.bscscan.com/address/' + process.env.REACT_APP_HERO_ADDRESS)}>{process.env.REACT_APP_HERO_ADDRESS}</div>\r\n          <span className=\"cursor-pointer\" onClick={() => navigator.clipboard.writeText(process.env.REACT_APP_HERO_ADDRESS)}>\r\n            <img src={window.origin + '/img/copy.png'} alt=\"button\" className=\"position-absolute button_copy\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row justify-content-around mt-5\">\r\n        <div className=\"col-9 col-md-5\">\r\n          <div className=\"detail-hero position-relative mb-3\">\r\n            <img src={window.origin + '/img/outstanding.png'} alt=\"\" className=\"w-100\" />\r\n            <h2 className=\"text-white fw-bolder text-center position-absolute text w-100 bottom-0 h5\">MANAGE HEROS</h2>\r\n          </div>\r\n          <div className=\"text-white fw-550 detail px-0 px-md-4 h6\">Users can acquire new heroes via rescue missions. In some maps, there is a rare chance users meet a prison block which locked a bomber hero. After accomplishing the rescue mission, you will receive a damaged hero, which needs to be recovered a while before it can go wild again.</div>\r\n        </div>\r\n\r\n        <div className=\"col-9 col-md-5\">\r\n          <div className=\"detail-hero position-relative mb-3\">\r\n            <img src={window.origin + '/img/outstanding.png'} alt=\"\" className=\"w-100\" />\r\n            <h2 className=\"text-white fw-bolder text-center position-absolute text w-100 bottom-0 h5\">ARENA BATTLE</h2>\r\n          </div>\r\n          <div className=\"text-white fw-550 detail px-0 px-md-4 h6\">Players choose a hero to join a bomb battle with many other players. Users have to pay a certain amount of tokens to participate in battle mode, the final winner will receive the entire loser’s token amount. Bomber Hero will also lose a certain amount of energy when participating in battle mode.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage","import { io } from 'socket.io-client';\r\n\r\nconst socket = io('localhost:8080');\r\n\r\nexport { socket };","import React, { useEffect, useRef, useState } from 'react'\r\nimport \"./main_page.scss\"\r\nimport gsap from 'gsap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { socket } from '../../Socket';\r\n\r\nconst gravity = 0.7\r\nlet player, enemy\r\nlet shop, background\r\nlet isDone\r\nlet requestAnimationFrameId\r\n\r\nfunction MainPage() {\r\n  const canvasRef = useRef()\r\n  const timerRef = useRef()\r\n  const countDownRef = useRef()\r\n  const [ctx, setCtx] = useState()\r\n  const app = useSelector(state => state.app)\r\n  const { currentRoom, playerDetail } = app\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (canvasRef && canvasRef.current) {\r\n      let currentCtx = canvasRef.current.getContext('2d');\r\n      if (currentCtx) {\r\n        setCtx(currentCtx)\r\n      }\r\n    }\r\n\r\n    if (ctx) {\r\n      class Sprite {\r\n        constructor({\r\n          position,\r\n          imageSrc,\r\n          scale = 1,\r\n          framesMax = 1,\r\n          offset = { x: 0, y: 0 }\r\n        }) {\r\n          this.position = position\r\n          this.width = 50\r\n          this.height = 150\r\n          this.image = new Image()\r\n          this.image.src = imageSrc\r\n          this.scale = scale\r\n          this.framesMax = framesMax\r\n          this.framesCurrent = 0\r\n          this.framesElapsed = 0\r\n          this.framesHold = 5\r\n          this.offset = offset\r\n        }\r\n      \r\n        draw(c) {\r\n          c.drawImage(\r\n            this.image,\r\n            this.framesCurrent * (this.image.width / this.framesMax),\r\n            0,\r\n            this.image.width / this.framesMax,\r\n            this.image.height,\r\n            this.position.x - this.offset.x,\r\n            this.position.y - this.offset.y,\r\n            (this.image.width / this.framesMax) * this.scale,\r\n            this.image.height * this.scale\r\n          )\r\n        }\r\n      \r\n        animateFrames() {\r\n          this.framesElapsed++\r\n      \r\n          if (this.framesElapsed % this.framesHold === 0) {\r\n            if (this.framesCurrent < this.framesMax - 1) {\r\n              this.framesCurrent++\r\n            } else {\r\n              this.framesCurrent = 0\r\n            }\r\n          }\r\n        }\r\n      \r\n        update(c) {\r\n          this.draw(c)\r\n          this.animateFrames()\r\n        }\r\n      }\r\n      \r\n      class Fighter extends Sprite {\r\n        constructor({\r\n          position,\r\n          velocity,\r\n          color = 'red',\r\n          imageSrc,\r\n          scale = 1,\r\n          framesMax = 1,\r\n          offset = { x: 0, y: 0 },\r\n          sprites,\r\n          minX,\r\n          maxX,\r\n          attackBox = { offset: {}, width: undefined, height: undefined },\r\n          attackSpeed,\r\n          damage,\r\n          defense,\r\n          hp\r\n        }) {\r\n          super({\r\n            position,\r\n            imageSrc,\r\n            scale,\r\n            framesMax,\r\n            offset\r\n          })\r\n          this.minX = minX\r\n          this.maxX = maxX\r\n          this.velocity = velocity\r\n          this.width = 50\r\n          this.height = 150\r\n          this.lastKey = \"\";\r\n          this.isJumping = false;\r\n          this.attackBox = {\r\n            position: {\r\n              x: this.position.x,\r\n              y: this.position.y\r\n            },\r\n            offset: attackBox.offset,\r\n            width: attackBox.width,\r\n            height: attackBox.height\r\n          }\r\n          this.color = color\r\n          this.isAttacking = false;\r\n          this.health = hp\r\n          this.framesCurrent = 0\r\n          this.framesElapsed = 0\r\n          this.framesHold = 5\r\n          this.sprites = sprites\r\n          this.dead = false\r\n          this.lastTimeAttack = new Date().getTime()\r\n          this.attackSpeed = attackSpeed\r\n          this.damage = damage\r\n          this.defense = defense\r\n          this.hp = hp\r\n          this.keys = {\r\n            ArrowRight: {\r\n              pressed: false\r\n            },\r\n            ArrowLeft: {\r\n              pressed: false\r\n            }\r\n          }\r\n\r\n          for (const sprite in this.sprites) {\r\n            sprites[sprite].image = new Image()\r\n            sprites[sprite].image.src = sprites[sprite].imageSrc\r\n          }\r\n        }\r\n\r\n        update(c, canvasHeight) {\r\n          this.draw(c)\r\n          if (!this.dead) this.animateFrames()\r\n\r\n          // attack boxes\r\n          this.attackBox.position.x = this.position.x + this.attackBox.offset.x\r\n          this.attackBox.position.y = this.position.y + this.attackBox.offset.y\r\n\r\n          // draw the attack box\r\n          c.fillRect(\r\n            this.attackBox.position.x,\r\n            this.attackBox.position.y,\r\n            this.attackBox.width,\r\n            this.attackBox.height\r\n          )\r\n\r\n          this.position.x += this.velocity.x\r\n          this.position.y += this.velocity.y\r\n\r\n          // gravity function\r\n          if (this.position.y + this.height + this.velocity.y >= canvasHeight - 96) {\r\n            this.velocity.y = 0\r\n            this.position.y = 330\r\n          } else this.velocity.y += gravity\r\n        }\r\n\r\n        attack() {\r\n          if (new Date().getTime() - this.lastTimeAttack >= this.attackSpeed) {\r\n            this.switchSprite('attack1')\r\n            this.isAttacking = true\r\n            this.lastTimeAttack = new Date().getTime()\r\n          }\r\n        }\r\n\r\n        takeHit(receiveAtk) {\r\n          this.health -= Math.abs(receiveAtk - this.defense * 0.5)\r\n          if (this.health <= 0) {\r\n            this.switchSprite('death')\r\n          } else {\r\n            this.switchSprite('takeHit')\r\n          }\r\n        }\r\n\r\n        switchSprite(sprite) {\r\n          if (this.image === this.sprites.death.image) {\r\n            if (this.framesCurrent === this.sprites.death.framesMax - 1)\r\n              this.dead = true\r\n            return\r\n          }\r\n\r\n          // overriding all other animations with the attack animation\r\n          if (\r\n            this.image === this.sprites.attack1.image &&\r\n            this.framesCurrent < this.sprites.attack1.framesMax - 1\r\n          )\r\n            return\r\n\r\n          // override when fighter gets hit\r\n          if (\r\n            this.image === this.sprites.takeHit.image &&\r\n            this.framesCurrent < this.sprites.takeHit.framesMax - 1\r\n          )\r\n            return\r\n\r\n          switch (sprite) {\r\n            case 'idle':\r\n              if (this.image !== this.sprites.idle.image) {\r\n                this.image = this.sprites.idle.image\r\n                this.framesMax = this.sprites.idle.framesMax\r\n                this.framesCurrent = 0\r\n              }\r\n              break\r\n            case 'run':\r\n              if (this.image !== this.sprites.run.image) {\r\n                this.image = this.sprites.run.image\r\n                this.framesMax = this.sprites.run.framesMax\r\n                this.framesCurrent = 0\r\n              }\r\n              break\r\n            case 'jump':\r\n              if (this.image !== this.sprites.jump.image) {\r\n                this.image = this.sprites.jump.image\r\n                this.framesMax = this.sprites.jump.framesMax\r\n                this.framesCurrent = 0\r\n              }\r\n              break\r\n\r\n            case 'fall':\r\n              if (this.image !== this.sprites.fall.image) {\r\n                this.image = this.sprites.fall.image\r\n                this.framesMax = this.sprites.fall.framesMax\r\n                this.framesCurrent = 0\r\n              }\r\n              break\r\n\r\n            case 'attack1':\r\n              if (this.image !== this.sprites.attack1.image) {\r\n                this.image = this.sprites.attack1.image\r\n                this.framesMax = this.sprites.attack1.framesMax\r\n                this.framesCurrent = 0\r\n              }\r\n              break\r\n\r\n            case 'takeHit':\r\n              if (this.image !== this.sprites.takeHit.image) {\r\n                this.image = this.sprites.takeHit.image\r\n                this.framesMax = this.sprites.takeHit.framesMax\r\n                this.framesCurrent = 0\r\n              }\r\n              break\r\n\r\n            case 'death':\r\n              if (this.image !== this.sprites.death.image) {\r\n                this.image = this.sprites.death.image\r\n                this.framesMax = this.sprites.death.framesMax\r\n                this.framesCurrent = 0\r\n              }\r\n              break\r\n          }\r\n        }\r\n\r\n        updateFigures(newData) {\r\n          this.velocity = newData.velocity\r\n          this.lastKey = newData.lastKey;\r\n          this.isJumping = newData.isJumping;\r\n          this.attackBox = newData.attackBox;\r\n          this.isAttacking = newData.isAttacking;\r\n          this.health = newData.health\r\n          this.framesCurrent = newData.framesCurrent\r\n          this.framesElapsed = newData.framesElapsed\r\n          this.framesHold = newData.framesHold\r\n          this.sprites = newData.sprites\r\n          this.dead = newData.dead\r\n          this.lastTimeAttack = newData.lastTimeAttack\r\n          this.keys = newData.keys\r\n        }\r\n      }\r\n\r\n      ctx.clearRect(0, 0, 1024, 576);\r\n\r\n      background = new Sprite({\r\n        position: {\r\n          x: 0,\r\n          y: 0\r\n        },\r\n        imageSrc: window.origin + \"/img/background.png\"\r\n      })\r\n\r\n      shop = new Sprite({\r\n        position: {\r\n          x: 600,\r\n          y: 128\r\n        },\r\n        imageSrc: window.origin + \"/img/shop.png\",\r\n        scale: 2.75,\r\n        framesMax: 6\r\n      })\r\n      \r\n      const DEFAULT_DATA = {\r\n        hero: {\r\n          \"position\": {\r\n            \"x\": 296.5,\r\n            \"y\": 100\r\n          },\r\n          \"velocity\": {\r\n            \"x\": 0,\r\n            \"y\": 0\r\n          },\r\n          \"imageSrc\": \"/img/hero/Idle.png\",\r\n          \"framesMax\": 11,\r\n          \"scale\": 2.5,\r\n          \"color\": \"blue\",\r\n          \"offset\": {\r\n            \"x\": 140,\r\n            \"y\": 55\r\n          },\r\n          \"sprites\": {\r\n            \"idle\": {\r\n              \"imageSrc\": \"/img/hero/Idle.png\",\r\n              \"framesMax\": 11\r\n            },\r\n            \"run\": {\r\n              \"imageSrc\": \"/img/hero/Run.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"jump\": {\r\n              \"imageSrc\": \"/img/hero/Jump.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"fall\": {\r\n              \"imageSrc\": \"/img/hero/Fall.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"attack1\": {\r\n              \"imageSrc\": \"/img/hero/Attack.png\",\r\n              \"framesMax\": 6\r\n            },\r\n            \"takeHit\": {\r\n              \"imageSrc\": \"/img/hero/Take Hit.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"death\": {\r\n              \"imageSrc\": \"/img/hero/Death.png\",\r\n              \"framesMax\": 9\r\n            }\r\n          },\r\n          \"attackBox\": {\r\n            \"offset\": {\r\n              \"x\": 90,\r\n              \"y\": 80\r\n            },\r\n            \"width\": 80,\r\n            \"height\": 50\r\n          },\r\n          \"minX\": 6,\r\n          \"maxX\": 945,\r\n          \"attackSpeed\": \"700\",\r\n          \"damage\": \"50\",\r\n          \"defense\": \"39\",\r\n          \"hp\": \"700.53\"\r\n        },\r\n        heroEnemy: {\r\n          \"position\": {\r\n            \"x\": 666.5,\r\n            \"y\": 100\r\n          },\r\n          \"velocity\": {\r\n            \"x\": 0,\r\n            \"y\": 0\r\n          },\r\n          \"imageSrc\": \"/img/heroEnemy/Idle.png\",\r\n          \"framesMax\": 11,\r\n          \"scale\": 2.5,\r\n          \"color\": \"blue\",\r\n          \"offset\": {\r\n            \"x\": 140,\r\n            \"y\": 55\r\n          },\r\n          \"sprites\": {\r\n            \"idle\": {\r\n              \"imageSrc\": \"/img/heroEnemy/Idle.png\",\r\n              \"framesMax\": 11\r\n            },\r\n            \"run\": {\r\n              \"imageSrc\": \"/img/heroEnemy/Run.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"jump\": {\r\n              \"imageSrc\": \"/img/heroEnemy/Jump.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"fall\": {\r\n              \"imageSrc\": \"/img/heroEnemy/Fall.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"attack1\": {\r\n              \"imageSrc\": \"/img/heroEnemy/Attack.png\",\r\n              \"framesMax\": 6\r\n            },\r\n            \"takeHit\": {\r\n              \"imageSrc\": \"/img/heroEnemy/Take Hit.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"death\": {\r\n              \"imageSrc\": \"/img/heroEnemy/Death.png\",\r\n              \"framesMax\": 9\r\n            }\r\n          },\r\n          \"attackBox\": {\r\n            \"offset\": {\r\n              \"x\": -95,\r\n              \"y\": 80\r\n            },\r\n            \"width\": 80,\r\n            \"height\": 50\r\n          },\r\n          \"minX\": 6,\r\n          \"maxX\": 945,\r\n          \"attackSpeed\": \"700\",\r\n          \"damage\": \"50\",\r\n          \"defense\": \"39\",\r\n          \"hp\": \"700.53\"\r\n        },\r\n        samuraiMack: {\r\n          \"position\": {\r\n            \"x\": 306.5,\r\n            \"y\": 0\r\n          },\r\n          \"velocity\": {\r\n            \"x\": 0,\r\n            \"y\": 0\r\n          },\r\n          \"imageSrc\": \"/img/samuraiMack/Idle.png\",\r\n          \"framesMax\": 8,\r\n          \"color\": \"red\",\r\n          \"scale\": 2.5,\r\n          \"offset\": {\r\n            \"x\": 215,\r\n            \"y\": 157\r\n          },\r\n          \"sprites\": {\r\n            \"idle\": {\r\n              \"imageSrc\": \"/img/samuraiMack/Idle.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"run\": {\r\n              \"imageSrc\": \"/img/samuraiMack/Run.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"jump\": {\r\n              \"imageSrc\": \"/img/samuraiMack/Jump.png\",\r\n              \"framesMax\": 2\r\n            },\r\n            \"fall\": {\r\n              \"imageSrc\": \"/img/samuraiMack/Fall.png\",\r\n              \"framesMax\": 2\r\n            },\r\n            \"attack1\": {\r\n              \"imageSrc\": \"/img/samuraiMack/Attack1.png\",\r\n              \"framesMax\": 6\r\n            },\r\n            \"takeHit\": {\r\n              \"imageSrc\": \"/img/samuraiMack/Take Hit.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"death\": {\r\n              \"imageSrc\": \"/img/samuraiMack/Death.png\",\r\n              \"framesMax\": 6\r\n            }\r\n          },\r\n          \"attackBox\": {\r\n            \"offset\": {\r\n              \"x\": 100,\r\n              \"y\": 50\r\n            },\r\n            \"width\": 160,\r\n            \"height\": 50\r\n          },\r\n          \"minX\": 10,\r\n          \"maxX\": 940,\r\n          \"attackSpeed\": \"200\",\r\n          \"damage\": \"60.4\",\r\n          \"defense\": \"31.5\",\r\n          \"hp\": \"665\"\r\n        },\r\n        samuraiMackEnemy: {\r\n          \"position\": {\r\n            \"x\": 656.5,\r\n            \"y\": 0\r\n          },\r\n          \"velocity\": {\r\n            \"x\": 0,\r\n            \"y\": 0\r\n          },\r\n          \"imageSrc\": \"/img/samuraiMackEnemy/Idle.png\",\r\n          \"framesMax\": 8,\r\n          \"scale\": 2.5,\r\n          \"color\": \"blue\",\r\n          \"offset\": {\r\n            \"x\": 215,\r\n            \"y\": 157\r\n          },\r\n          \"sprites\": {\r\n            \"idle\": {\r\n              \"imageSrc\": \"/img/samuraiMackEnemy/Idle.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"run\": {\r\n              \"imageSrc\": \"/img/samuraiMackEnemy/Run.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"jump\": {\r\n              \"imageSrc\": \"/img/samuraiMackEnemy/Jump.png\",\r\n              \"framesMax\": 2\r\n            },\r\n            \"fall\": {\r\n              \"imageSrc\": \"/img/samuraiMackEnemy/Fall.png\",\r\n              \"framesMax\": 2\r\n            },\r\n            \"attack1\": {\r\n              \"imageSrc\": \"/img/samuraiMackEnemy/Attack1.png\",\r\n              \"framesMax\": 6\r\n            },\r\n            \"takeHit\": {\r\n              \"imageSrc\": \"/img/samuraiMackEnemy/Take Hit.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"death\": {\r\n              \"imageSrc\": \"/img/samuraiMackEnemy/Death.png\",\r\n              \"framesMax\": 6\r\n            }\r\n          },\r\n          \"attackBox\": {\r\n            \"offset\": {\r\n              \"x\": -170,\r\n              \"y\": 50\r\n            },\r\n            \"width\": 160,\r\n            \"height\": 50\r\n          },\r\n          \"maxX\": 940,\r\n          \"minX\": 10,\r\n          \"attackSpeed\": \"200\",\r\n          \"damage\": \"60.4\",\r\n          \"defense\": \"31.5\",\r\n          \"hp\": \"665\"\r\n        },\r\n        warrior: {\r\n          \"position\": {\r\n            \"x\": 296.5,\r\n            \"y\": 0\r\n          },\r\n          \"velocity\": {\r\n            \"x\": 0,\r\n            \"y\": 0\r\n          },\r\n          \"imageSrc\": \"/img/warrior/Idle.png\",\r\n          \"framesMax\": 10,\r\n          \"scale\": 2.5,\r\n          \"color\": \"red\",\r\n          \"offset\": {\r\n            \"x\": 165,\r\n            \"y\": 100\r\n          },\r\n          \"sprites\": {\r\n            \"idle\": {\r\n              \"imageSrc\": \"/img/warrior/Idle.png\",\r\n              \"framesMax\": 10\r\n            },\r\n            \"run\": {\r\n              \"imageSrc\": \"/img/warrior/Run.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"jump\": {\r\n              \"imageSrc\": \"/img/warrior/Jump.png\",\r\n              \"framesMax\": 3\r\n            },\r\n            \"fall\": {\r\n              \"imageSrc\": \"/img/warrior/Fall.png\",\r\n              \"framesMax\": 3\r\n            },\r\n            \"attack1\": {\r\n              \"imageSrc\": \"/img/warrior/Attack1.png\",\r\n              \"framesMax\": 7\r\n            },\r\n            \"takeHit\": {\r\n              \"imageSrc\": \"/img/warrior/Take Hit.png\",\r\n              \"framesMax\": 3\r\n            },\r\n            \"death\": {\r\n              \"imageSrc\": \"/img/warrior/Death.png\",\r\n              \"framesMax\": 7\r\n            }\r\n          },\r\n          \"attackBox\": {\r\n            \"offset\": {\r\n              \"x\": 80,\r\n              \"y\": 65\r\n            },\r\n            \"width\": 90,\r\n            \"height\": 40\r\n          },\r\n          \"minX\": 5,\r\n          \"maxX\": 945,\r\n          \"attackSpeed\": \"900\",\r\n          \"damage\": \"71.3\",\r\n          \"defense\": \"36.5\",\r\n          \"hp\": \"635\"\r\n        },\r\n        warriorEnemy: {\r\n          \"position\": {\r\n            \"x\": 686.5,\r\n            \"y\": 0\r\n          },\r\n          \"velocity\": {\r\n            \"x\": 0,\r\n            \"y\": 0\r\n          },\r\n          \"imageSrc\": \"/img/warriorEnemy/Idle.png\",\r\n          \"framesMax\": 10,\r\n          \"scale\": 2.5,\r\n          \"color\": \"blue\",\r\n          \"offset\": {\r\n            \"x\": 165,\r\n            \"y\": 100\r\n          },\r\n          \"sprites\": {\r\n            \"idle\": {\r\n              \"imageSrc\": \"/img/warriorEnemy/Idle.png\",\r\n              \"framesMax\": 10\r\n            },\r\n            \"run\": {\r\n              \"imageSrc\": \"/img/warriorEnemy/Run.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"jump\": {\r\n              \"imageSrc\": \"/img/warriorEnemy/Jump.png\",\r\n              \"framesMax\": 3\r\n            },\r\n            \"fall\": {\r\n              \"imageSrc\": \"/img/warriorEnemy/Fall.png\",\r\n              \"framesMax\": 3\r\n            },\r\n            \"attack1\": {\r\n              \"imageSrc\": \"/img/warriorEnemy/Attack1.png\",\r\n              \"framesMax\": 7\r\n            },\r\n            \"takeHit\": {\r\n              \"imageSrc\": \"/img/warriorEnemy/Take Hit.png\",\r\n              \"framesMax\": 3\r\n            },\r\n            \"death\": {\r\n              \"imageSrc\": \"/img/warriorEnemy/Death.png\",\r\n              \"framesMax\": 7\r\n            }\r\n          },\r\n          \"attackBox\": {\r\n            \"offset\": {\r\n              \"x\": -90,\r\n              \"y\": 65\r\n            },\r\n            \"width\": 90,\r\n            \"height\": 40\r\n          },\r\n          \"minX\": 5,\r\n          \"maxX\": 945,\r\n          \"attackSpeed\": \"900\",\r\n          \"damage\": \"71.3\",\r\n          \"defense\": \"36.5\",\r\n          \"hp\": \"635\"\r\n        },\r\n        wizard: {\r\n          \"position\": {\r\n            \"x\": 266.5,\r\n            \"y\": 0\r\n          },\r\n          \"velocity\": {\r\n            \"x\": 0,\r\n            \"y\": 0\r\n          },\r\n          \"imageSrc\": \"/img/wizard/Idle.png\",\r\n          \"framesMax\": 6,\r\n          \"scale\": 1.5,\r\n          \"color\": \"red\",\r\n          \"offset\": {\r\n            \"x\": 115,\r\n            \"y\": 60\r\n          },\r\n          \"sprites\": {\r\n            \"idle\": {\r\n              \"imageSrc\": \"/img/wizard/Idle.png\",\r\n              \"framesMax\": 6\r\n            },\r\n            \"run\": {\r\n              \"imageSrc\": \"/img/wizard/Run.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"jump\": {\r\n              \"imageSrc\": \"/img/wizard/Jump.png\",\r\n              \"framesMax\": 2\r\n            },\r\n            \"fall\": {\r\n              \"imageSrc\": \"/img/wizard/Fall.png\",\r\n              \"framesMax\": 2\r\n            },\r\n            \"attack1\": {\r\n              \"imageSrc\": \"/img/wizard/Attack1.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"takeHit\": {\r\n              \"imageSrc\": \"/img/wizard/Take Hit.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"death\": {\r\n              \"imageSrc\": \"/img/wizard/Death.png\",\r\n              \"framesMax\": 7\r\n            }\r\n          },\r\n          \"attackBox\": {\r\n            \"offset\": {\r\n              \"x\": 100,\r\n              \"y\": 65\r\n            },\r\n            \"width\": 90,\r\n            \"height\": 50\r\n          },\r\n          \"minX\": 5,\r\n          \"maxX\": 925,\r\n          \"attackSpeed\": \"800\",\r\n          \"damage\": \"50.576\",\r\n          \"defense\": \"51\",\r\n          \"hp\": \"663\"\r\n        },\r\n        wizardEnemy: {\r\n          \"position\": {\r\n            \"x\": 656.5,\r\n            \"y\": 0\r\n          },\r\n          \"velocity\": {\r\n            \"x\": 0,\r\n            \"y\": 0\r\n          },\r\n          \"imageSrc\": \"/img/wizardEnemy/Idle.png\",\r\n          \"framesMax\": 6,\r\n          \"scale\": 1.5,\r\n          \"color\": \"blue\",\r\n          \"offset\": {\r\n            \"x\": 115,\r\n            \"y\": 60\r\n          },\r\n          \"sprites\": {\r\n            \"idle\": {\r\n              \"imageSrc\": \"/img/wizardEnemy/Idle.png\",\r\n              \"framesMax\": 6\r\n            },\r\n            \"run\": {\r\n              \"imageSrc\": \"/img/wizardEnemy/Run.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"jump\": {\r\n              \"imageSrc\": \"/img/wizardEnemy/Jump.png\",\r\n              \"framesMax\": 2\r\n            },\r\n            \"fall\": {\r\n              \"imageSrc\": \"/img/wizardEnemy/Fall.png\",\r\n              \"framesMax\": 2\r\n            },\r\n            \"attack1\": {\r\n              \"imageSrc\": \"/img/wizardEnemy/Attack1.png\",\r\n              \"framesMax\": 8\r\n            },\r\n            \"takeHit\": {\r\n              \"imageSrc\": \"/img/wizardEnemy/Take Hit.png\",\r\n              \"framesMax\": 4\r\n            },\r\n            \"death\": {\r\n              \"imageSrc\": \"/img/wizardEnemy/Death.png\",\r\n              \"framesMax\": 7\r\n            }\r\n          },\r\n          \"attackBox\": {\r\n            \"offset\": {\r\n              \"x\": -75,\r\n              \"y\": 65\r\n            },\r\n            \"width\": 90,\r\n            \"height\": 50\r\n          },\r\n          \"minX\": 5,\r\n          \"maxX\": 925,\r\n          \"attackSpeed\": \"800\",\r\n          \"damage\": \"50.576\",\r\n          \"defense\": \"51\",\r\n          \"hp\": \"663\"\r\n        }\r\n      }\r\n\r\n      player = new Fighter(DEFAULT_DATA[currentRoom.players[0].champion])\r\n      enemy = new Fighter(DEFAULT_DATA[currentRoom.players[1].champion + \"Enemy\"])\r\n      \r\n      function handleCountdown() {\r\n        setTimeout(() => {\r\n          if (countDownRef.current) {\r\n            countDownRef.current.innerHTML = 'FIGHT!'\r\n          }\r\n          window.addEventListener('keyup', onKeyUp)\r\n          window.addEventListener('keydown', onKeyDown)\r\n          setTimeout(() => {\r\n            if (countDownRef.current) {\r\n              countDownRef.current.innerHTML = ''\r\n            }\r\n          }, 500)\r\n        }, 3000)\r\n      }\r\n\r\n      function handleEmitAction(payload) {\r\n        socket.emit('player_do_action', {\r\n          ...payload,\r\n          roomId: currentRoom.roomId,\r\n          who: playerDetail.isHost ? 'fighter1' : 'fighter2'\r\n        });\r\n      }\r\n    \r\n      function checkOnKeyUp(key, isHost) {\r\n        if (isHost) {\r\n          switch (key) {\r\n            case 'ArrowRight':\r\n              player.keys.ArrowRight.pressed = false\r\n              break\r\n            case 'ArrowLeft':\r\n              player.keys.ArrowLeft.pressed = false\r\n              break\r\n          }\r\n        } else {\r\n          switch (key) {\r\n            case 'ArrowRight':\r\n              enemy.keys.ArrowRight.pressed = false\r\n              break\r\n            case 'ArrowLeft':\r\n              enemy.keys.ArrowLeft.pressed = false\r\n              break\r\n          }\r\n        }\r\n      }\r\n    \r\n      function onKeyUp(event) {\r\n        if (isDone) return;\r\n        checkOnKeyUp(event.key, playerDetail.isHost);\r\n        handleEmitAction({\r\n          key: event.key,\r\n          type: \"UP\"\r\n        })\r\n      }\r\n    \r\n      function handleCheckOnkeyDown(key, player) {\r\n        let isEmit = true\r\n        switch (key) {\r\n          case 'ArrowRight':\r\n            if (!player.keys.ArrowRight.pressed) {\r\n              player.keys.ArrowRight.pressed = true\r\n            } else {\r\n              isEmit = false\r\n            }\r\n            player.lastKey = key\r\n            break\r\n          case 'ArrowLeft':\r\n            if (!player.keys.ArrowLeft.pressed) {\r\n              player.keys.ArrowLeft.pressed = true\r\n            } else {\r\n              isEmit = false\r\n            }\r\n            player.lastKey = key\r\n            break\r\n          case \" \":\r\n            player.attack()\r\n            break\r\n          case \"ArrowUp\":\r\n            if (!player.isJumping) {\r\n              player.isJumping = true\r\n              setTimeout(() => {\r\n                player.isJumping = false\r\n              }, 800)\r\n              player.velocity.y = -15\r\n            }\r\n            break\r\n        }\r\n        return isEmit\r\n      }\r\n    \r\n      function checkOnKeyDown(key, isHost) {\r\n        let isEmit = true\r\n        if (isHost) {\r\n          isEmit = handleCheckOnkeyDown(key, player)\r\n        } else {\r\n          isEmit = handleCheckOnkeyDown(key, enemy)\r\n        }\r\n        return isEmit\r\n      }\r\n    \r\n      function onKeyDown(event) {\r\n        if (isDone) return;\r\n        const isEmit = checkOnKeyDown(event.key, playerDetail.isHost)\r\n        if (isEmit) {\r\n          handleEmitAction({\r\n            key: event.key,\r\n            type: \"DOWN\"\r\n          })\r\n        }\r\n      }\r\n      \r\n      async function handleStartGame() {\r\n        handleCountdown()\r\n      }\r\n\r\n      async function setStateFighter({ key, type, who }) {\r\n        if (playerDetail.isHost && who === 'fighter2') {\r\n          // update enemy\r\n          if (type === \"UP\") {\r\n            checkOnKeyUp(key, false)\r\n          } else if (type === \"DOWN\") {\r\n            checkOnKeyDown(key, false)\r\n          }\r\n        } else if (!playerDetail.isHost && who === 'fighter1') {\r\n          // up date player\r\n          if (type === \"UP\") {\r\n            checkOnKeyUp(key, true)\r\n          } else if (type === \"DOWN\") {\r\n            checkOnKeyDown(key, true)\r\n          }\r\n        }\r\n      }\r\n\r\n      \r\n      function rectangularCollision({ rectangle1, rectangle2 }) {\r\n        return (\r\n          rectangle1.attackBox.position.x + rectangle1.attackBox.width >=\r\n          rectangle2.position.x &&\r\n          rectangle1.attackBox.position.x <=\r\n          rectangle2.position.x + rectangle2.width &&\r\n          rectangle1.attackBox.position.y + rectangle1.attackBox.height >=\r\n          rectangle2.position.y &&\r\n          rectangle1.attackBox.position.y <= rectangle2.position.y + rectangle2.height\r\n        )\r\n      }\r\n\r\n      function checkMovement(player) {\r\n        if (player.keys.ArrowLeft.pressed && player.lastKey === 'ArrowLeft') {\r\n          if (player.position.x <= player.minX) {\r\n            player.position.x = player.minX + 1\r\n            player.velocity.x = 0\r\n          } else {\r\n            player.velocity.x = -5\r\n          }\r\n          player.switchSprite('run')\r\n        } else if (player.keys.ArrowRight.pressed && player.lastKey === 'ArrowRight') {\r\n          if (player.position.x >= player.maxX) {\r\n            player.position.x = player.maxX - 1\r\n            player.velocity.x = 0\r\n          } else {\r\n            player.velocity.x = 5\r\n          }\r\n          player.switchSprite('run')\r\n        } else {\r\n          player.velocity.x = 0\r\n          player.switchSprite('idle')\r\n        }\r\n\r\n        // jumping\r\n        if (player.velocity.y < 0 && (player && !player.isJumping)) {\r\n          player.switchSprite('jump')\r\n          player.isJumping = true\r\n        } else if (player.velocity.y > 0) {\r\n          player.switchSprite('fall')\r\n        }\r\n      }\r\n\r\n      function checkCollisionAndGetsHit(player, enemy, id) {\r\n        // detect for collision & enemy gets hit\r\n        if (\r\n          rectangularCollision({\r\n            rectangle1: player,\r\n            rectangle2: enemy\r\n          }) &&\r\n          player.isAttacking &&\r\n          player.framesCurrent === 4\r\n        ) {\r\n          enemy.takeHit(player.damage)\r\n          player.isAttacking = false\r\n          gsap.to(id, {\r\n            width: (enemy.health / enemy.hp * 100) + '%'\r\n          })\r\n        }\r\n\r\n        // if player misses\r\n        if (player.isAttacking && player.framesCurrent === 4) {\r\n          player.isAttacking = false\r\n        }\r\n      }\r\n          \r\n      async function checkPlayerAction() {\r\n        if (!player || !enemy) {\r\n          return;\r\n        }\r\n        checkMovement(playerDetail.isHost ? player : enemy);\r\n        checkMovement(playerDetail.isHost ? enemy : player);\r\n\r\n        checkCollisionAndGetsHit(\r\n          playerDetail.isHost ? player : enemy,\r\n          playerDetail.isHost ? enemy : player,\r\n          playerDetail.isHost ? \"#enemyHealth\" : \"#playerHealth\"\r\n        );\r\n        checkCollisionAndGetsHit(\r\n          playerDetail.isHost ? enemy : player,\r\n          playerDetail.isHost ? player : enemy,\r\n          playerDetail.isHost ? \"#playerHealth\" : \"#enemyHealth\"\r\n        );\r\n\r\n        // end game based on health\r\n        if (player.health <= 0 || enemy.health <= 0) {\r\n          if (!isDone) {\r\n            determineWinner()\r\n            handleGameOver()\r\n          }\r\n        }\r\n      }\r\n\r\n      function determineWinner() {\r\n        if (timerRef.current) {\r\n          timerRef.current.innerHTML = 0\r\n        }\r\n        let displayTextEl = document.getElementById('displayText');\r\n        if (!displayTextEl) return;\r\n\r\n        if (\r\n          player.health === player.hp &&\r\n          enemy.health === enemy.hp\r\n        ) {\r\n          displayTextEl.innerHTML = \"Tie\"\r\n        } else if (player.health > enemy.health) {\r\n          displayTextEl.innerHTML = currentRoom.players[0].playerName + ' win!'\r\n        } else if (player.health < enemy.health) {\r\n          displayTextEl.innerHTML = currentRoom.players[1].playerName + ' win!';\r\n        }\r\n      }\r\n\r\n      async function animate() {\r\n        requestAnimationFrameId = requestAnimationFrame(animate)\r\n        ctx.fillRect(0, 0, 1024, 576)\r\n        ctx.fillStyle = 'black'\r\n        ctx.fillRect(0, 0, 1024, 576)\r\n        background.update(ctx)\r\n        shop.update(ctx)\r\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.15)'\r\n        ctx.fillRect(0, 0, 1024, 576)\r\n        if (player && enemy) {\r\n          player.update(ctx, 576)\r\n          enemy.update(ctx, 576)\r\n          player.velocity.x = 0\r\n          enemy.velocity.x = 0\r\n          if (isDone) {\r\n            player.velocity.x = 0;\r\n            player.isAttacking = false;\r\n            player.isJumping = false;\r\n            player.switchSprite('idle')\r\n            \r\n            enemy.velocity.x = 0;\r\n            enemy.isAttacking = false;\r\n            enemy.isJumping = false;\r\n            enemy.switchSprite('idle')\r\n          } else {\r\n            checkPlayerAction()\r\n          }\r\n        }\r\n      }\r\n\r\n      requestAnimationFrameId = requestAnimationFrame(animate);\r\n\r\n      socket.emit('player_load_completely', {\r\n        roomId: currentRoom.roomId,\r\n        playerIndex: playerDetail.isHost ? 0 : 1\r\n      })\r\n\r\n      socket.on('start_game', handleStartGame)\r\n      socket.on('receive_action', setStateFighter)\r\n\r\n      function handleGameOver() {\r\n        console.log('gameOver')\r\n        socket.emit('battle_off', {\r\n          roomId: currentRoom.roomId\r\n        })\r\n        window.removeEventListener('keyup', onKeyUp, true)\r\n        window.removeEventListener('keydown', onKeyDown, true)\r\n        player.velocity.x = 0;\r\n        player.isAttacking = false;\r\n        player.isJumping = false;\r\n        player.update(ctx, 576);\r\n\r\n        enemy.velocity.x = 0;\r\n        enemy.isAttacking = false;\r\n        enemy.isJumping = false;\r\n        enemy.update(ctx, 576);\r\n\r\n        isDone = true\r\n\r\n        setTimeout(() => {\r\n          history.push('/waiting-room')\r\n        }, 2000)\r\n      }\r\n\r\n      socket.on('game_over', () => {\r\n        determineWinner()\r\n        handleGameOver()\r\n      })\r\n\r\n      socket.on('battle_update', (res) => {\r\n        if (timerRef.current) {\r\n          timerRef.current.innerHTML = res\r\n        }\r\n      })\r\n    }\r\n    console.log('use effect')\r\n    return () => {\r\n      console.log('use effect clean up')\r\n      cancelAnimationFrame(requestAnimationFrameId)\r\n      player = null\r\n      enemy = null\r\n      shop = null\r\n      background = null\r\n      isDone = false\r\n      socket.off('start_game')\r\n      socket.off('receive_action')\r\n      socket.off('game_over')\r\n      socket.off('battle_update')\r\n    }\r\n  }, [ctx])\r\n\r\n  return (\r\n    <>\r\n      <img src={window.origin + '/img/background_full.png'} />\r\n      <div className='main_page_container'>\r\n        <div className='fight_screen' style={{\r\n          backgroundImage: `url(${window.origin + \"/img/outline.png\"}`\r\n        }}>\r\n          <div className='outline'>\r\n            <div className='health'>\r\n              <div className='lose_health'></div>\r\n              <div id=\"playerHealth\"></div>\r\n            </div>\r\n\r\n            <div ref={timerRef} id=\"timer\">10</div>\r\n            <div className='health'>\r\n              <div className='lose_health'></div>\r\n              <div id=\"enemyHealth\"></div>\r\n            </div>\r\n            <div></div>\r\n          </div>\r\n          <div id=\"displayText\">Tie</div>\r\n          <div\r\n            id=\"startGame\"\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              if (isDone) {\r\n                history.replace('/waiting-room')\r\n              }\r\n            }}\r\n            style={{\r\n              display: (!isDone) ? 'none' : 'block',\r\n              marginTop: (!isDone) ? 'auto' : '30%'\r\n            }}\r\n          >\r\n            <div>\r\n              <img width=\"270\" height=\"110\" src={window.origin + \"/img/fight.png\"} />\r\n              <p className='h5'>{isDone ? \"Back to room\" : \"Wait for enemy\"}</p>\r\n            </div>\r\n          </div>\r\n          <canvas width={1024} height={576} ref={canvasRef}></canvas>\r\n        </div>\r\n      </div>\r\n      <div ref={countDownRef} className=\"timeStart\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPage","export const actionTypes = Object.freeze({\r\n  SET_DATA: \"SET_DATA\",\r\n  CLEAR_DATA: \"CLEAR_DATA\"\r\n})\r\n\r\nexport const setData = (data) => ({\r\n  type: actionTypes.SET_DATA,\r\n  payload: data\r\n})\r\n\r\nexport const clearDataAction = () => ({\r\n  type: actionTypes.CLEAR_DATA\r\n})","import { Button } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport './room.scss'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setData, clearDataAction } from '../../redux/app/appActions'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { socket } from '../../Socket'\r\n\r\nfunction RoomPage() {\r\n  const app = useSelector(state => state.app)\r\n  const { currentRoom, playerDetail } = app\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [isFirstTime, setIsFirstTime] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (isFirstTime) {\r\n      socket.emit('load_room', { roomId: currentRoom.roomId })\r\n      setIsFirstTime(false)\r\n    }\r\n\r\n    socket.on('player_join', (roomData) => {\r\n      dispatch(setData({\r\n        currentRoom: roomData\r\n      }));\r\n    })\r\n\r\n    socket.on('host_leave_room', () => {\r\n      if (currentRoom && currentRoom.players && currentRoom.players.length > 1) {\r\n        alert(\"Host left room\")\r\n        clearData()\r\n      }\r\n    })\r\n\r\n    socket.on(\"room_has_update\", (data) => {\r\n      dispatch(setData({\r\n        currentRoom: data\r\n      }))\r\n    })\r\n\r\n    socket.on(\"room_start\", handleRoomStart)\r\n  }, [isFirstTime, setIsFirstTime])\r\n\r\n  function handleRoomStart(newRoomData) {\r\n    if (!newRoomData) return\r\n\r\n    let newData = newRoomData\r\n    newData.players[1].status = false\r\n    dispatch(setData({\r\n      currentRoom: {\r\n        ...newData\r\n      },\r\n      playerDetail: {\r\n        ...playerDetail,\r\n        status: false\r\n      }\r\n    }))\r\n    history.push('/fight')\r\n  }\r\n\r\n  function renderText() {\r\n    if (playerDetail && playerDetail.isHost) {\r\n      return 'Start'\r\n    } else {\r\n      if (\r\n        (currentRoom && currentRoom.players && currentRoom.players[1] && currentRoom.players[1].status) ||\r\n        (playerDetail && playerDetail.status)\r\n      ) {\r\n        return \"Unready\"\r\n      } else {\r\n        return \"Ready\"\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearData() {\r\n    setTimeout(() => {\r\n      dispatch(clearDataAction())\r\n      history.replace(\"/\")\r\n    }, 200)\r\n  }\r\n\r\n  function handleLeaveRoom() {\r\n    socket.emit('player_leave_room', { roomId: currentRoom.roomId, isHost: playerDetail.isHost })\r\n    clearData()\r\n  }\r\n\r\n  function handleChangeStatus(key, value) {\r\n    socket.emit(\"player_change_status\", {\r\n      roomId: currentRoom.roomId, newStatus: { key: key, value: value },\r\n      currentPlayerIndex: playerDetail.isHost ? 0 : 1\r\n    })\r\n  }\r\n\r\n  function handleStart() {\r\n    if (\r\n      currentRoom.players &&\r\n      currentRoom.players.length > 1 &&\r\n      currentRoom.players[1].status\r\n    ) {\r\n      socket.emit('host_start_room', { currentRoom }, handleRoomStart);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"home_body\" style={{ backgroundImage: `url('${window.origin}/img/background_home.png')` }}>\r\n        <div className='home_body__list_bg'>\r\n          <div className='home_body__list_bg_list'>\r\n            <div className='room_list_area'>\r\n              <div style={{ height: 10 }} />\r\n              <div className='room_detail'>\r\n                <div>\r\n                  ID:&nbsp;{currentRoom && currentRoom.roomId ? currentRoom.roomId : \"\"}\r\n                  <br />\r\n                  Name:&nbsp;{currentRoom && currentRoom.roomName ? currentRoom.roomName : \"\"}\r\n                </div>\r\n                <span className='ml-auto'>\r\n                  Deposit:<br />\r\n                  <img src={window.origin + '/img/coin.png'} width=\"30\" height=\"30\" />\r\n                  {currentRoom && currentRoom.deposit ? currentRoom.deposit : \"\"}\r\n                </span>\r\n              </div>\r\n              <div className='in_room_body'>\r\n                <div className='content_left' style={{\r\n                  border: currentRoom && currentRoom.players && currentRoom.players[0] && currentRoom.players[0].status ? '5px solid green' : 'none',\r\n                }}>\r\n                  <div className='text-center'>\r\n                    {\r\n                      currentRoom && currentRoom.players &&\r\n                        currentRoom.players[0] && currentRoom.players[0].playerName ?\r\n                        currentRoom.players[0].playerName : \"\"\r\n                    }\r\n                  </div>\r\n                  {\r\n                    playerDetail.isHost && (\r\n                      <div className='my-3'>\r\n                        <select\r\n                          value={(\r\n                            currentRoom && currentRoom.players &&\r\n                            currentRoom.players[0] &&\r\n                            currentRoom.players[0].champion\r\n                          ) || 'hero'\r\n                          }\r\n                          onChange={(e) => {\r\n                            e.preventDefault();\r\n                            let newData = currentRoom\r\n                            newData.players[0].champion = e.target.value\r\n                            dispatch(setData({\r\n                              currentRoom: newData\r\n                            }))\r\n                            handleChangeStatus('champion', e.target.value)\r\n                          }}>\r\n                          <option value={\"hero\"}>Hero</option>\r\n                          <option value={\"samuraiMack\"}>Samurai Mack</option>\r\n                          <option value={'warrior'}>Warrior</option>\r\n                          <option value={'wizard'}>Wizard</option>\r\n                        </select>\r\n                      </div>\r\n                    )\r\n                  }\r\n                  {\r\n                    currentRoom && currentRoom.players &&\r\n                      currentRoom.players[0] && currentRoom.players[0].champion ?\r\n                      <div>\r\n                        <img src={window.origin + '/img/' + currentRoom.players[0].champion + '/waiting.gif'} />\r\n                      </div> :\r\n                      <></>\r\n                  }\r\n                </div>\r\n                <div className=\"vl\" />\r\n                <div className='content_right' style={{\r\n                  border: (\r\n                    (\r\n                      currentRoom && currentRoom.players &&\r\n                      currentRoom.players[1] && currentRoom.players[1].status\r\n                    ) || (\r\n                      playerDetail && playerDetail.status\r\n                    )\r\n                  ) ? '5px solid green' : 'none',\r\n                }}>\r\n                  <div className='text-center'>\r\n                    {\r\n                      currentRoom && currentRoom.players &&\r\n                        currentRoom.players[1] && currentRoom.players[1].playerName ?\r\n                        currentRoom.players[1].playerName : \"\"\r\n                    }\r\n                  </div>\r\n                  {\r\n                    !playerDetail.isHost && (\r\n                      <div className='my-3'>\r\n                        <select\r\n                          value={(\r\n                            currentRoom && currentRoom.players &&\r\n                            currentRoom.players[1] &&\r\n                            currentRoom.players[1].champion\r\n                          ) || 'hero'\r\n                          }\r\n                          onChange={(e) => {\r\n                            e.preventDefault();\r\n                            let newData = currentRoom\r\n                            newData.players[1].champion = e.target.value\r\n                            dispatch(setData({\r\n                              currentRoom: newData\r\n                            }))\r\n                            handleChangeStatus('champion', e.target.value)\r\n                          }}>\r\n                          <option value={\"hero\"}>Hero</option>\r\n                          <option value={\"samuraiMack\"}>Samurai Mack</option>\r\n                          <option value={'warrior'}>Warrior</option>\r\n                          <option value={'wizard'}>Wizard</option>\r\n                        </select>\r\n                      </div>\r\n                    )\r\n                  }\r\n                  {\r\n                    currentRoom && currentRoom.players &&\r\n                      currentRoom.players[1] && currentRoom.players[1].champion ?\r\n                      <div>\r\n                        <img src={window.origin + '/img/' + currentRoom.players[1].champion + '/waiting.gif'} />\r\n                      </div> :\r\n                      <></>\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className='footer'>\r\n                <Button className='mr-5' variant=\"danger\" onClick={handleLeaveRoom}>Leave room</Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    if (playerDetail.isHost) {\r\n                      handleStart()\r\n                    } else {\r\n                      dispatch(setData({\r\n                        playerDetail: {\r\n                          ...playerDetail,\r\n                          status: !playerDetail.status\r\n                        }\r\n                      }))\r\n                      handleChangeStatus('status', !playerDetail.status)\r\n                    }\r\n                  }}\r\n                  variant={\r\n                    (\r\n                      (currentRoom && currentRoom.players && currentRoom.players[1] && currentRoom.players[1].status) ||\r\n                      (playerDetail && playerDetail.status)\r\n                    ) ? \"warning\" : \"primary\"}\r\n                >{renderText()}</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomPage","import React, { useEffect, useState } from 'react'\r\nimport { Form, Modal, Button } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setData } from '../../redux/app/appActions'\r\nimport { socket } from '../../Socket';\r\n\r\nfunction FindRoom(props) {\r\n  const [show, setShow] = useState(false)\r\n  const [isFirstTime, setIsFirstTime] = useState(true)\r\n  const [roomList, setRoomList] = useState([])\r\n  const { data } = props\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    let isMounted = false;\r\n    if (isMounted) return;\r\n\r\n    socket.on('connect', () => {\r\n      console.log('connect successfully')\r\n    });\r\n    socket.on('error', (err) => {\r\n      console.error('Connection error: ', err);\r\n    });\r\n    socket.on('reconnect', () => {\r\n      console.log('Reconnecting')\r\n    });\r\n    socket.on(\"disconnect\", (reason) => {\r\n      console.log('reason', reason);\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    }\r\n  }, []);\r\n\r\n  function getListRoom() {\r\n    socket.emit('get_list_room', (payload) => {\r\n      if (payload) {\r\n        setRoomList(Object.values(payload))\r\n      } else {\r\n        roomList.length > 0 && setRoomList([])\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let isMounted = false;\r\n    if (isMounted) return;\r\n\r\n    if (isFirstTime && !isMounted) {\r\n      getListRoom()\r\n      setIsFirstTime(false)\r\n    }\r\n\r\n    socket.on('new_room_created', (newRoom) => {\r\n      setRoomList(prev => {\r\n        let newData = [\r\n          newRoom,\r\n          ...prev\r\n        ]\r\n        console.log('newData', newRoom);\r\n        console.log(prev);\r\n        if (newData.length > 9) {\r\n          newData.pop()\r\n        }\r\n\r\n        return newData\r\n      })\r\n    })\r\n\r\n    socket.on('room_update', (roomData) => {\r\n      setRoomList(prev => {\r\n        let index = prev.findIndex(item => roomData.roomId === item.roomId);\r\n        let newData = prev\r\n        if (index >= 0) {\r\n          newData[index] = roomData\r\n        }\r\n        return newData\r\n      })\r\n    })\r\n\r\n    socket.on('room_delete', (roomData) => {\r\n      if (roomData) {\r\n        setRoomList(prev => {\r\n          let index = prev.findIndex(item => roomData.roomId === item.roomId);\r\n          let newData = prev\r\n          if (index >= 0) {\r\n            newData.splice(index, 1);\r\n          }\r\n          return newData\r\n        })\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      isMounted = true;\r\n    }\r\n  }, [])\r\n\r\n  function renderRoomId(roomId) {\r\n    if (!roomId) return ''\r\n    let length = roomId.length\r\n    return roomId.slice(0, 4) + '...' + roomId.slice(length - 4, length)\r\n  }\r\n\r\n  const onCreateRoom = (e) => {\r\n    e.preventDefault();\r\n    socket.emit('create_room', {\r\n      roomName: e.target.roomName.value,\r\n      player: data,\r\n      deposit: parseInt(e.target.deposit.value)\r\n    }, (res) => {\r\n      console.log('create room');\r\n      if (res) {\r\n        props.history.push('/waiting-room')\r\n        dispatch(setData({\r\n          currentRoom: res.data,\r\n          playerDetail: res.data.players[0]\r\n        }))\r\n      } else {\r\n        alert('error when creating room')\r\n        console.log(res.errMessage)\r\n        getListRoom()\r\n      }\r\n    });\r\n  }\r\n\r\n  function joinRoom(roomData) {\r\n    socket.emit('join_room', { roomId: roomData.roomId, player: data }, (res) => {\r\n      if (res) {\r\n        if (res.errCode === 0) {\r\n          dispatch(setData({\r\n            currentRoom: res.data,\r\n            playerDetail: res.data.players[1]\r\n          }))\r\n          props.history.push('/waiting-room')\r\n        } else {\r\n          alert(res.errMessage)\r\n          getListRoom()\r\n        }\r\n      } else {\r\n        alert(\"Error when join room\")\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='room_list_area'>\r\n        <div className='body'>\r\n          <ul>\r\n            {\r\n              roomList && roomList.length > 0 && roomList.map((item, index) => {\r\n                if (!item) return <></>\r\n\r\n                return (\r\n                  <li\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      if (e.detail === 2) {\r\n                        joinRoom(item)\r\n                      }\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <div>ID: {renderRoomId(item.roomId)}</div>\r\n                    <div>{item.roomName || \"\"}</div>\r\n                    <div>\r\n                      <img src={window.origin + '/img/coin.png'} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n                      <span>{item.deposit || \"\"}</span>\r\n                    </div>\r\n                    <div>{item.players ? item.players.length : \"\"}/2&nbsp;</div>\r\n                    <div>{item.isStart ? \"Playing\" : \"Waiting\"}</div>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n        <div className='w-100 text-center m-3 gap'>\r\n          <Button variant=\"light\" className='mr-3'>&#8592;</Button>\r\n          <Button variant=\"light\">&#8594;</Button>\r\n        </div>\r\n        <div className='footer'>\r\n          <Button className='mr-5' variant=\"light\" onClick={() => {\r\n            getListRoom()\r\n          }}>Refresh data</Button>\r\n          <Button onClick={() => {\r\n            setShow(true)\r\n          }}>Create room</Button>\r\n        </div>\r\n      </div>\r\n      <Modal show={show} onHide={() => setShow(false)}>\r\n        <Modal.Dialog>\r\n          <Modal.Header>\r\n            <Modal.Title>CREATE ROOM</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form onSubmit={onCreateRoom}>\r\n              <Form.Group className=\"mb-3\" controlId=\"roomName\">\r\n                <Form.Label>Room's name</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Enter name\" autoFocus />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"deposit\">\r\n                <Form.Label>Deposit</Form.Label>\r\n                <Form.Control required type=\"number\" min={10} placeholder=\"Deposit\" />\r\n              </Form.Group>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => setShow(false)}>Close</Button>\r\n                <Button variant=\"primary\" type=\"submit\">Create</Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal.Dialog>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FindRoom","export const actionTypes = Object.freeze({\r\n  LOGIN_USER: \"LOGIN_USER\",\r\n  LOGOUT_USER: 'LOGOUT_USER'\r\n})\r\n\r\nexport const login = (data) => ({\r\n  type: actionTypes.LOGIN_USER,\r\n  payload: data\r\n})\r\n\r\nexport const logout = () => ({\r\n  type: actionTypes.LOGOUT_USER\r\n})","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../../redux/user/userActions'\r\n\r\nfunction Layout(props) {\r\n  const { isLoggedIn, data } = props\r\n  const dispatch = useDispatch()\r\n  function handleLogin(e) {\r\n    e.preventDefault();\r\n    dispatch(login({\r\n      userId: 1,\r\n      username: 'tung',\r\n      balance: 1000,\r\n      address: '',\r\n      champion: 'hero'\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <nav className=\"navbar navbar-dark bg-dark flex-md-nowrap p-0 shadow\">\r\n      <a\r\n        className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n        href=\"http://github.com/augustustung\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >Hero Fight</a>\r\n      <ul className=\"navbar-nav px-3\">\r\n        <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n          {\r\n            isLoggedIn ? (\r\n              <>\r\n                <img src={window.origin + '/img/coin.png'} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n                <small className=\"user_balance\">\r\n                  {data && data.balance ? data.balance : '0'}\r\n                </small>\r\n              </>\r\n            ) : (\r\n              <button className='button_collect_wallet' onClick={handleLogin}>\r\n                <img src={window.origin + '/img/login.webp'} />\r\n                <span>Login</span>\r\n              </button>\r\n            )\r\n          }\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <div className=\"home_body\" style={{ backgroundImage: `url('${window.origin}/img/background_home.png')` }}>\r\n      <div className='home_body__list_bg'>\r\n        <div className='home_body__list_bg_list'>\r\n          <props.Component {...props}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Layout","import React from 'react';\r\nimport './App.css';\r\nimport HomePage from './component/HomePage'\r\nimport { useSelector } from 'react-redux'\r\nimport MainPage from './component/MainPage';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport RoomPage from './component/RoomPage';\r\nimport FindRoom from './component/FindRoom';\r\nimport Layout from './component/Layout';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\n\r\nconst routes = {\r\n  Home: {\r\n    component: HomePage,\r\n    path: \"/\",\r\n    isAuth: false\r\n  },\r\n  FindRoom: {\r\n    component: FindRoom,\r\n    path: \"/\",\r\n    isAuth: false\r\n  },\r\n  WaittingRoom: {\r\n    component: RoomPage,\r\n    path: \"/waiting-room\",\r\n    isAuth: true\r\n  },\r\n  Fight: {\r\n    component: MainPage,\r\n    path: \"/fight\",\r\n    isAuth: true\r\n  }\r\n}\r\n\r\n\r\nfunction App() {\r\n  const user = useSelector(state => state.user)\r\n  const { isLoggedIn } = user\r\n\r\n  return (\r\n    <main className=\"main_container\">\r\n      <Router>\r\n        <Switch>\r\n          {(!user || !isLoggedIn) ? (\r\n            <Route path=\"/\" exact component={(props) => <Layout {...props} Component={HomePage}  />} />\r\n          ) : (\r\n            <Route path='/' exact component={(props) => <Layout {...user}  {...props} Component={FindRoom} />} />\r\n          )}\r\n          {Object.keys(routes).map((key, index)=>{\r\n            if(isLoggedIn && routes[key].isAuth) {\r\n              return (\r\n                <Route \r\n                  key={index} extract \r\n                  path={routes[key].path} \r\n                  component={routes[key].component} \r\n                />\r\n              )\r\n            } else if (!routes[key].isAuth) {\r\n              return (\r\n                <Route \r\n                  path={routes[key].path} key={index} exact \r\n                  component={(props) => <Layout  {...props} Component={routes[key].component} />} />\r\n              )\r\n            }\r\n          })}\r\n        </Switch>\r\n      </Router>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import Web3 from \"web3\"\r\n// import LipToken from '../../abis/LipToken.json'\r\n\r\nexport const actionTypes = Object.freeze({\r\n  CONNECTION_REQUEST: \"CONNECTION_REQUEST\",\r\n  CONNECTION_SUCCESS: \"CONNECTION_SUCCESS\",\r\n  CONNECTION_FAILED: \"CONNECTION_FAILED\",\r\n  UPDATE_ACCOUNT: \"UPDATE_ACCOUNT\"\r\n})\r\n\r\nconst connectRequest = () => ({\r\n  type: actionTypes.CONNECTION_REQUEST\r\n})\r\n\r\nconst connectSuccess = (payload) => ({\r\n  type: actionTypes.CONNECTION_SUCCESS,\r\n  payload: payload\r\n})\r\n\r\nconst connectFailed = (msg) => ({\r\n  type: actionTypes.CONNECTION_FAILED,\r\n  payload: msg\r\n})\r\n\r\nconst updateAccount = (payload) => ({\r\n  type: actionTypes.UPDATE_ACCOUNT,\r\n  payload: payload\r\n})\r\n\r\nexport const handleConnect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest())\r\n    // if (window.ethereum) {\r\n    //   let web3 = new Web3(window.ethereum)\r\n    //   // open pop-up request connect with metamask\r\n    //   try {\r\n    //     const accounts = await window.ethereum.request({\r\n    //       method: \"eth_requestAccounts\"\r\n    //     })\r\n    //     const networkId = await window.ethereum.request({\r\n    //       method: \"net_version\"\r\n    //     })\r\n    //     const lipTokenNetworkData = await LipToken.networks[networkId]\r\n    //     if (lipTokenNetworkData) {\r\n    //       const lipToken = new web3.eth.Contract(LipToken.abi, lipTokenNetworkData.address)\r\n    //       dispatch(connectSuccess({\r\n    //         account: accounts[0],\r\n    //         lipToken: lipToken,\r\n    //         web3: web3\r\n    //       }))\r\n\r\n    //       // add listeners start\r\n    //       window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n    //         dispatch(updateAccount(accounts[0]))\r\n    //       })\r\n    //       window.ethereum.on('chainChanged', () => {\r\n    //         window.location.reload()\r\n    //       })\r\n    //     } else {\r\n    //       // add listeners end\r\n    //       dispatch(connectFailed(\"Change network to ETH.\"))\r\n    //     }\r\n    //   } catch (error) {\r\n    //     dispatch(connectFailed('Non-Ethereum browser detected. You should consider trying MetaMask!'))\r\n    //     console.log('err', error)\r\n    //   }\r\n    // } else {\r\n    //   dispatch(connectFailed('Non-Ethereum browser detected. You should consider trying MetaMask!'))\r\n    // }\r\n  }\r\n}","import { actionTypes } from './blockchainActions'\r\nconst initialState = {\r\n  loading: false,\r\n  account: null,\r\n  lipToken: null,\r\n  web3: null,\r\n  errMesg: \"\"\r\n}\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CONNECTION_REQUEST:\r\n      return {\r\n        ...initialState,\r\n        loading: true\r\n      }\r\n    case actionTypes.CONNECTION_SUCCESS:\r\n      return {\r\n        ...initialState,\r\n        account: action.payload.account,\r\n        loading: false,\r\n        lipToken: action.payload.lipToken,\r\n        web3: action.payload.web3\r\n      }\r\n    case actionTypes.CONNECTION_FAILED:\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errMesg: action.payload\r\n      }\r\n    case actionTypes.UPDATE_ACCOUNT:\r\n      return {\r\n        ...initialState,\r\n        account: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default blockchainReducer","export const actionTypes = Object.freeze({\r\n  CHECK_DATA_REQUEST: \"CHECK_DATA_REQUEST\",\r\n  CHECK_DATA_SUCCESS: 'CHECK_DATA_SUCCESS',\r\n  CHECK_DATA_FAILED: 'CHECK_DATA_FAILED'\r\n})\r\n\r\nconst fetchDataRequest = () => ({\r\n  type: actionTypes.CHECK_DATA_REQUEST\r\n})\r\n\r\nconst fetchDataSuccess = (payload) => ({\r\n  type: actionTypes.CHECK_DATA_SUCCESS,\r\n  payload: payload\r\n})\r\n\r\nconst fetchDataFailed = (msg) => ({\r\n  type: actionTypes.CHECK_DATA_FAILED,\r\n  payload: msg\r\n})\r\n\r\n\r\nexport const handleFetchData = (lipToken, account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest())\r\n    try {\r\n      let allOwnerLips = await lipToken.methods.getAddressLips(account).call()\r\n      let allLips = await lipToken.methods.getLips().call();\r\n      dispatch(fetchDataSuccess({\r\n        allLips: allLips,\r\n        allOwnerLips: allOwnerLips\r\n      }))\r\n    } catch (error) {\r\n      console.log(\"fetchDataFailed\", error)\r\n      dispatch(fetchDataFailed(\"Couldn't load data from contract.\"))\r\n    }\r\n\r\n  }\r\n}","import { actionTypes } from './dataActions'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  allLips: [],\r\n  allOwnerLips: [],\r\n  error: false,\r\n  errorMsg: \"\"\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CHECK_DATA_REQUEST:\r\n      return {\r\n        ...initialState,\r\n        loading: true\r\n      }\r\n    case actionTypes.CHECK_DATA_SUCCESS:\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        allLips: action.payload.allLips,\r\n        allOwnerLips: action.payload.allOwnerLips\r\n      }\r\n    case actionTypes.CHECK_DATA_FAILED:\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default dataReducer","import { actionTypes } from './userActions'\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  data: {}\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        data: action.payload\r\n      }\r\n    case actionTypes.LOGOUT_USER:\r\n      window.location.reload()\r\n      break;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer","import { actionTypes } from './appActions'\r\n\r\nconst initialState = {\r\n  playerDetail: {},\r\n  currentRoom: {}\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_DATA:\r\n      if (!(action.payload && action.payload.playerDetail && Object.keys(action.payload.playerDetail).length > 2)) {\r\n        delete action.payload.playerDetail\r\n      }\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case actionTypes.CLEAR_DATA: {\r\n      return {\r\n        playerDetail: {},\r\n        currentRoom: {}\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default appReducer","import {\r\n  applyMiddleware, compose,\r\n  createStore, combineReducers\r\n} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport blockchainReducer from './blockchain/blockchainReducer'\r\nimport dataReducer from './data/dataReducer'\r\nimport userReducer from './user/userReducer'\r\nimport appReducer from './app/appReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n  user: userReducer,\r\n  app: appReducer\r\n})\r\n\r\nconst middlewares = [thunk]\r\nconst composeEnhancers = compose(applyMiddleware(...middlewares))\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers)\r\n}\r\n\r\nconst store = configureStore()\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}